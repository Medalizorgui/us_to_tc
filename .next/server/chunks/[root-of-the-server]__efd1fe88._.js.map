{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/dali/Desktop/pfev1/lib/db.ts"],"sourcesContent":["import { Pool } from \"pg\"; \r\n\r\nconst pool = new Pool({\r\n  user: \"postgres\",\r\n  host: \"localhost\",\r\n  database: \"us_to_tc\",\r\n  password: \"admin\",\r\n  port: 5432, // Default PostgreSQL port\r\n});\r\n\r\n\r\nexport default pool;\r\n"],"names":[],"mappings":";;;AAAA;;;;;;AAEA,MAAM,OAAO,IAAI,oGAAA,CAAA,OAAI,CAAC;IACpB,MAAM;IACN,MAAM;IACN,UAAU;IACV,UAAU;IACV,MAAM;AACR;uCAGe","debugId":null}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/dali/Desktop/pfev1/app/api/test-suites/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\"\r\nimport pool from \"@/lib/db\"\r\n\r\nexport async function GET(request: Request) {\r\n  try {\r\n    const { searchParams } = new URL(request.url)\r\n    const projectId = searchParams.get('project_id')\r\n    const includeChildren = searchParams.get('include_children') === 'true'\r\n\r\n    if (!projectId) {\r\n      return NextResponse.json(\r\n        { error: \"Project ID is required\" },\r\n        { status: 400 }\r\n      )\r\n    }\r\n\r\n    const client = await pool.connect()\r\n    try {\r\n      const query = includeChildren\r\n        ? `SELECT * FROM test_suites \r\n           WHERE project_id = $1\r\n           ORDER BY created_at DESC`\r\n        : `SELECT * FROM test_suites \r\n           WHERE project_id = $1 AND parent_suite_id IS NULL\r\n           ORDER BY created_at DESC`\r\n\r\n      const result = await client.query(query, [projectId])\r\n\r\n      return NextResponse.json(result.rows)\r\n    } finally {\r\n      client.release()\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching test suites:', error)\r\n    return NextResponse.json(\r\n      { error: \"Failed to fetch test suites\" },\r\n      { status: 500 }\r\n    )\r\n  }\r\n}\r\n\r\nexport async function POST(request: Request) {\r\n  try {\r\n    const body = await request.json()\r\n    const { project_id, name, parent_suite_id, details } = body\r\n\r\n    if (!project_id || !name) {\r\n      return NextResponse.json(\r\n        { error: \"Project ID and name are required\" },\r\n        { status: 400 }\r\n      )\r\n    }\r\n\r\n    const client = await pool.connect()\r\n    try {\r\n      const result = await client.query(\r\n        `INSERT INTO test_suites \r\n         (project_id, name, parent_suite_id, details, created_at)\r\n         VALUES ($1, $2, $3, $4, NOW())\r\n         RETURNING *`,\r\n        [project_id, name, parent_suite_id || null, details || null]\r\n      )\r\n\r\n      return NextResponse.json(result.rows[0])\r\n    } finally {\r\n      client.release()\r\n    }\r\n  } catch (error) {\r\n    console.error('Error creating test suite:', error)\r\n    return NextResponse.json(\r\n      { error: \"Failed to create test suite\" },\r\n      { status: 500 }\r\n    )\r\n  }\r\n} "],"names":[],"mappings":";;;;AAAA;AACA;;;;;;;AAEO,eAAe,IAAI,OAAgB;IACxC,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,YAAY,aAAa,GAAG,CAAC;QACnC,MAAM,kBAAkB,aAAa,GAAG,CAAC,wBAAwB;QAEjE,IAAI,CAAC,WAAW;YACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAyB,GAClC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,SAAS,MAAM,2GAAA,CAAA,UAAI,CAAC,OAAO;QACjC,IAAI;YACF,MAAM,QAAQ,kBACV,CAAC;;mCAEwB,CAAC,GAC1B,CAAC;;mCAEwB,CAAC;YAE9B,MAAM,SAAS,MAAM,OAAO,KAAK,CAAC,OAAO;gBAAC;aAAU;YAEpD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,OAAO,IAAI;QACtC,SAAU;YACR,OAAO,OAAO;QAChB;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA8B,GACvC;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,UAAU,EAAE,IAAI,EAAE,eAAe,EAAE,OAAO,EAAE,GAAG;QAEvD,IAAI,CAAC,cAAc,CAAC,MAAM;YACxB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAmC,GAC5C;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,SAAS,MAAM,2GAAA,CAAA,UAAI,CAAC,OAAO;QACjC,IAAI;YACF,MAAM,SAAS,MAAM,OAAO,KAAK,CAC/B,CAAC;;;oBAGW,CAAC,EACb;gBAAC;gBAAY;gBAAM,mBAAmB;gBAAM,WAAW;aAAK;YAG9D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,EAAE;QACzC,SAAU;YACR,OAAO,OAAO;QAChB;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA8B,GACvC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}
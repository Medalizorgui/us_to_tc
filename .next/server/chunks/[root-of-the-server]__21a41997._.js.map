{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/dali/Desktop/pfev1/lib/db.ts"],"sourcesContent":["import { Pool } from \"pg\"; \r\n\r\nconst pool = new Pool({\r\n  user: \"postgres\",\r\n  host: \"localhost\",\r\n  database: \"us_to_tc\",\r\n  password: \"admin\",\r\n  port: 5432, // Default PostgreSQL port\r\n});\r\n\r\n\r\nexport default pool;\r\n"],"names":[],"mappings":";;;AAAA;;;;;;AAEA,MAAM,OAAO,IAAI,oGAAA,CAAA,OAAI,CAAC;IACpB,MAAM;IACN,MAAM;IACN,UAAU;IACV,UAAU;IACV,MAAM;AACR;uCAGe","debugId":null}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/dali/Desktop/pfev1/app/api/projects/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\nimport pool from '@/lib/db'; // Adjust the import path as necessary\r\n\r\n// GET: Fetch all projects\r\nexport async function GET() {\r\n    try {\r\n        const client = await pool.connect();\r\n        const result = await client.query('SELECT * FROM projects ORDER BY created_at DESC');\r\n        client.release();\r\n\r\n        return NextResponse.json(result.rows, { status: 200 });\r\n    } catch (error) {\r\n        console.error('Error fetching projects:', error);\r\n        return NextResponse.json({ error: 'Failed to fetch projects' }, { status: 500 });\r\n    }\r\n}\r\n\r\n// POST: Create a new project\r\nexport async function POST(request: NextRequest) {\r\n    try {\r\n        const { name, description } = await request.json();\r\n        \r\n        const client = await pool.connect();\r\n        const result = await client.query(\r\n            'INSERT INTO projects (name, description, created_at, updated_at) VALUES ($1, $2, NOW(), NOW()) RETURNING *',\r\n            [name, description]\r\n        );\r\n        client.release();\r\n\r\n        return NextResponse.json(result.rows[0], { status: 201 });\r\n    } catch (error) {\r\n        console.error('Error creating project:', error);\r\n        return NextResponse.json({ error: 'Failed to create project' }, { status: 500 });\r\n    }\r\n}\r\n\r\n// PUT: Update a project\r\nexport async function PUT(request: NextRequest) {\r\n    try {\r\n        const { id, name, description } = await request.json();\r\n        \r\n        const client = await pool.connect();\r\n        const result = await client.query(\r\n            'UPDATE projects SET name = $1, description = $2, updated_at = NOW() WHERE id = $3 RETURNING *',\r\n            [name, description, id]\r\n        );\r\n        client.release();\r\n\r\n        if (result.rowCount === 0) {\r\n            return NextResponse.json({ error: 'Project not found' }, { status: 404 });\r\n        }\r\n\r\n        return NextResponse.json(result.rows[0], { status: 200 });\r\n    } catch (error) {\r\n        console.error('Error updating project:', error);\r\n        return NextResponse.json({ error: 'Failed to update project' }, { status: 500 });\r\n    }\r\n}\r\n\r\n// DELETE: Delete a project\r\nexport async function DELETE(request: NextRequest) {\r\n    try {\r\n        const { searchParams } = new URL(request.url);\r\n        const id = searchParams.get('id');\r\n\r\n        if (!id) {\r\n            return NextResponse.json({ error: 'Project ID is required' }, { status: 400 });\r\n        }\r\n\r\n        const client = await pool.connect();\r\n        const result = await client.query(\r\n            'DELETE FROM projects WHERE id = $1 RETURNING *',\r\n            [id]\r\n        );\r\n        client.release();\r\n\r\n        if (result.rowCount === 0) {\r\n            return NextResponse.json({ error: 'Project not found' }, { status: 404 });\r\n        }\r\n\r\n        return NextResponse.json({ message: 'Project deleted successfully' }, { status: 200 });\r\n    } catch (error) {\r\n        console.error('Error deleting project:', error);\r\n        return NextResponse.json({ error: 'Failed to delete project' }, { status: 500 });\r\n    }\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}